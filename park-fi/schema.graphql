type CheckIn @entity(immutable: true) {
  id: Bytes!
  pfid_: BigInt! # uint256
  member_: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CheckedOut @entity(immutable: true) {
  id: Bytes!
  pfid_: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewMemberAdded @entity(immutable: true) {
  id: Bytes!
  _newMember: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ParkSpaceMinted @entity(immutable: true) {
  id: Bytes!
  _tokenid: BigInt! # uint256
  _hPrice: BigInt! # uint256
  _dPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ParkFiCheckIn @entity(immutable: true) {
  id: Bytes!
  pfid_: BigInt! # uint256
  member_: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ParkFiCheckedOut @entity(immutable: true) {
  id: Bytes!
  pfid_: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ParkFiNewMemberAdded @entity(immutable: true) {
  id: Bytes!
  _newMember: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ParkFiOwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ParkFiParkSpaceMinted @entity(immutable: true) {
  id: Bytes!
  _tokenid: BigInt! # uint256
  _hPrice: BigInt! # uint256
  _dPrice: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
